nec std;
index std::linux::io::println;

A [
    C,
    D,
    E,
    F
] {
    new(k: u8) -> A {
        return match k {
            1 => A::C,
            2 => A::D,
            3 => A::E,
            _ => A::F
        };
    }

    exit() {
        [
            "mov rax, 60",
            "mov rdi, 1",
            "syscall"
        ];
    }
}

V {
    kind: A
} {
    new(k: u8) -> V {
        return V { kind: A::new(k) };
    }

    hi(self) {
        println(self.kind);
        A::exit();
    }
}

>main() {
    println("Hello World!");

    let k = 1;
    k += 1;
    k -= 1;
    k *= 1;
    k /= 1;
    k %= 1;
    k ^= 1;
    k |= 1;
    k &= 1;
    k <<= 1;
    k >>= 1;

    let v = V::new(k);
    v.hi();
}
